<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gloudtek.dao.TypesOfBooksDao">

	<select id="queryObject" resultType="com.gloudtek.entity.TypesOfBooksEntity">
		select * from types_of_books where id = #{value}
	</select>

	<select id="queryList" resultType="com.gloudtek.entity.TypesOfBooksEntity">
		select * from types_of_books 
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from types_of_books 
	</select>
	 
	<insert id="save" parameterType="com.gloudtek.entity.TypesOfBooksEntity">
		insert into types_of_books
		(
			`id`, 
			`politics`, 
			`law`, 
			`military`, 
			`economy`, 
			`literature`, 
			`art`, 
			`remark`, 
			`isdelete`, 
			`create_by`, 
			`create_time`, 
			`update_by`, 
			`update_time`
		)
		values
		(
			#{id}, 
			#{politics}, 
			#{law}, 
			#{military}, 
			#{economy}, 
			#{literature}, 
			#{art}, 
			#{remark}, 
			#{isdelete}, 
			#{createBy}, 
			#{createTime}, 
			#{updateBy}, 
			#{updateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.gloudtek.entity.TypesOfBooksEntity">
		update types_of_books 
		<set>
			<if test="politics != null">`politics` = #{politics}, </if>
			<if test="law != null">`law` = #{law}, </if>
			<if test="military != null">`military` = #{military}, </if>
			<if test="economy != null">`economy` = #{economy}, </if>
			<if test="literature != null">`literature` = #{literature}, </if>
			<if test="art != null">`art` = #{art}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="isdelete != null">`isdelete` = #{isdelete}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from types_of_books where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from types_of_books where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>